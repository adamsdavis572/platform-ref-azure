apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xapis.ingress.platformref.upbound.io
  labels:
    provider: azure
    service: api-deployment
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: ingress.platformref.upbound.io/v1alpha1
    kind: XAPI
  resources:
    # APIM API Resource
    - name: apimApi
      base:
        apiVersion: azure.upjet.crossplane.io/v1alpha1
        kind: ApiManagementApi
        spec:
          forProvider:
            apiManagementName: "" # Will be patched from shared ingress
            resourceGroupName: "" # Will be patched from shared ingress
            displayName: ""
            path: ""
            protocols:
              - https
            serviceUrl: ""
            import:
              - contentFormat: openapi-link
                contentValue: "" # OpenAPI spec URL
            subscriptionRequired: true
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.productName
              - fromFieldPath: spec.parameters.apiBasePath
            strategy: string
            string:
              fmt: "%s%s"
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.productName
              - fromFieldPath: spec.parameters.apiBasePath
            strategy: string
            string:
              fmt: "%s API - %s"
          toFieldPath: spec.forProvider.displayName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.apiBasePath
          toFieldPath: spec.forProvider.path
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.backendServiceUrl
          toFieldPath: spec.forProvider.serviceUrl
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.openApiSpecUrl
          toFieldPath: spec.forProvider.import[0].contentValue
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.apiManagementName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.resourceGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.apiId
        - type: CombineToComposite
          combine:
            variables:
              - fromFieldPath: status.atProvider.serviceUrl
              - fromFieldPath: spec.forProvider.path
            strategy: string
            string:
              fmt: "%s%s"
          toFieldPath: status.apiEndpoint

    # APIM API Product Association
    - name: apiProductAssociation
      base:
        apiVersion: azure.upjet.crossplane.io/v1alpha1
        kind: ApiManagementProductApi
        spec:
          forProvider:
            apiManagementName: "" # Will be patched from shared ingress
            resourceGroupName: "" # Will be patched from shared ingress
            apiName: "" # Will reference the API created above
            productId: "" # Will be patched to reference the target product
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.apiManagementName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.resourceGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.productName
          toFieldPath: spec.forProvider.productId
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.productName
              - fromFieldPath: spec.parameters.apiBasePath
            strategy: string
            string:
              fmt: "%s%s-product-association"
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.providerConfigName
          toFieldPath: spec.providerConfigRef.name

    # APIM API Policy (Optional)
    - name: apimApiPolicy
      base:
        apiVersion: azure.upjet.crossplane.io/v1alpha1
        kind: ApiManagementApiPolicy
        spec:
          forProvider:
            apiManagementName: "" # Will be patched from shared ingress
            resourceGroupName: "" # Will be patched from shared ingress
            apiName: "" # Will reference the API created above
            xmlContent: |
              <policies>
                <inbound>
                  <base />
                  <authentication-managed-identity resource="https://management.azure.com/" />
                  <set-backend-service base-url="{{backend-url}}" />
                </inbound>
                <backend>
                  <base />
                </backend>
                <outbound>
                  <base />
                </outbound>
                <on-error>
                  <base />
                </on-error>
              </policies>
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.apiManagementName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.resourceGroupName
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.productName
              - fromFieldPath: spec.parameters.apiBasePath
            strategy: string
            string:
              fmt: "%s%s-policy"
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.apimPolicyXml
          toFieldPath: spec.forProvider.xmlContent
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.providerConfigName
          toFieldPath: spec.providerConfigRef.name

    # APIM Backend Configuration
    - name: apimBackend
      base:
        apiVersion: azure.upjet.crossplane.io/v1alpha1
        kind: ApiManagementBackend
        spec:
          forProvider:
            apiManagementName: "" # Will be patched from shared ingress
            resourceGroupName: "" # Will be patched from shared ingress
            protocol: "http"
            url: ""
            credentials:
              authorization:
                scheme: "Bearer"
                parameter: "{{managed-identity-token}}"
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.backendServiceUrl
          toFieldPath: spec.forProvider.url
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.apiManagementName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.sharedIngressRef.name
          toFieldPath: spec.forProvider.resourceGroupName
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.productName
              - fromFieldPath: spec.parameters.apiBasePath
            strategy: string
            string:
              fmt: "%s%s-backend"
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.providerConfigName
          toFieldPath: spec.providerConfigRef.name
